# Create table statements
CREATE_TABLE_PLAYER|CREATE TABLE IF NOT EXISTS Player (id INTEGER PRIMARY KEY, nick TEXT, time_created INTEGER, UNIQUE(nick))
CREATE_TABLE_PURSE|CREATE TABLE IF NOT EXISTS Purse (player_id INTEGER, cash INTEGER, bank INTEGER, bankrupts INTEGER, UNIQUE(player_id), FOREIGN KEY(player_id) REFERENCES Player(id))
CREATE_TABLE_BANKING|CREATE TABLE IF NOT EXISTS Banking (id INTEGER PRIMARY KEY, player_id INTEGER, transaction_time INTEGER, cash_change INTEGER, cash INTEGER, bank INTEGER, FOREIGN KEY(player_id) REFERENCES Player(id))
CREATE_TABLE_DBVERSION|CREATE TABLE IF NOT EXISTS DBVersion (id INTEGER PRIMARY KEY, time INTEGER, version INTEGER, UNIQUE(version))
CREATE_TABLE_BJPLAYERSTAT|CREATE TABLE IF NOT EXISTS BJPlayerStat (player_id INTEGER, rounds INTEGER, winnings INTEGER, idles INTEGER, UNIQUE(player_id), FOREIGN KEY(player_id) REFERENCES Player(id))
CREATE_TABLE_BJROUND|CREATE TABLE IF NOT EXISTS BJRound (id INTEGER PRIMARY KEY, start_time INTEGER, end_time INTEGER, channel TEXT, shoe_size INTEGER, num_cards_left INTEGER, FOREIGN KEY(shoe_size) REFERENCES BJHouse(shoe_size))
CREATE_TABLE_BJHAND|CREATE TABLE IF NOT EXISTS BJHand (id INTEGER PRIMARY KEY, round_id INTEGER, hand TEXT, FOREIGN KEY(round_id) REFERENCES BJRound(id))
CREATE_TABLE_BJPLAYERHAND|CREATE TABLE IF NOT EXISTS BJPlayerHand (player_id INTEGER, hand_id INTEGER, bet INTEGER, split BOOLEAN, surrender BOOLEAN, doubledown BOOLEAN, result INTEGER, UNIQUE(player_id, hand_id), FOREIGN KEY(player_id) REFERENCES Player(id), FOREIGN KEY(hand_id) REFERENCES BJHand(id))
CREATE_TABLE_BJPLAYERINSURANCE|CREATE TABLE IF NOT EXISTS BJPlayerInsurance (player_id INTEGER, round_id INTEGER, bet INTEGER, result BOOLEAN, UNIQUE(player_id, round_id), FOREIGN KEY(player_id) REFERENCES Player(id), FOREIGN KEY(round_id) REFERENCES BJRound(id))
CREATE_TABLE_BJPLAYERCHANGE|CREATE TABLE IF NOT EXISTS BJPlayerChange (player_id INTEGER, round_id INTEGER, change INTEGER, cash INTEGER, UNIQUE(player_id, round_id), FOREIGN KEY(player_id) REFERENCES Player(id), FOREIGN KEY(round_id) REFERENCES BJRound(id))
CREATE_TABLE_BJPLAYERIDLE|CREATE TABLE IF NOT EXISTS BJPlayerIdle (player_id INTEGER, round_id INTEGER, idle_limit INTEGER, idle_warning INTEGER, UNIQUE(player_id, round_id), FOREIGN KEY(player_id) REFERENCES Player(id), FOREIGN KEY(round_id) REFERENCES BJRound(id))
CREATE_TABLE_BJHOUSE|CREATE TABLE IF NOT EXISTS BJHouse (shoe_size INTEGER, rounds INTEGER, winnings INTEGER, UNIQUE(shoe_size))
CREATE_TABLE_TPPLAYERSTAT|CREATE TABLE IF NOT EXISTS TPPlayerStat (player_id INTEGER, rounds INTEGER, winnings INTEGER, idles INTEGER, UNIQUE(player_id), FOREIGN KEY(player_id) REFERENCES Player(id))
CREATE_TABLE_TPROUND|CREATE TABLE IF NOT EXISTS TPRound (id INTEGER PRIMARY KEY, start_time INTEGER, end_time INTEGER, channel TEXT, community TEXT)
CREATE_TABLE_TPPOT|CREATE TABLE IF NOT EXISTS TPPot (id INTEGER PRIMARY KEY, round_id INTEGER, amount INTEGER, FOREIGN KEY(round_id) REFERENCES TPRound(id))
CREATE_TABLE_TPPLAYERPOT|CREATE TABLE IF NOT EXISTS TPPlayerPot (player_id INTEGER, pot_id INTEGER, contribution INTEGER, result BOOLEAN, UNIQUE(player_id, pot_ID), FOREIGN KEY(player_id) REFERENCES Player(id), FOREIGN KEY(pot_id) REFERENCES TPPot(id))
CREATE_TABLE_TPPLAYERCHANGE|CREATE TABLE IF NOT EXISTS TPPlayerChange (player_id INTEGER, round_id INTEGER, change INTEGER, cash INTEGER, UNIQUE(player_id, round_id), FOREIGN KEY(player_id) REFERENCES Player(id), FOREIGN KEY(round_id) REFERENCES TPRound(id))
CREATE_TABLE_TPHAND|CREATE TABLE IF NOT EXISTS TPHand (id INTEGER PRIMARY KEY, round_id INTEGER, hand TEXT, FOREIGN KEY(round_id) REFERENCES TPRound(id))
CREATE_TABLE_TPPLAYERHAND|CREATE TABLE IF NOT EXISTS TPPlayerHand (player_id INTEGER, hand_id INTEGER, fold BOOLEAN, allin BOOLEAN, UNIQUE(player_id, hand_id), FOREIGN KEY(player_id) REFERENCES Player(id), FOREIGN KEY(hand_id) REFERENCES TPHand(id))
CREATE_TABLE_TPPLAYERIDLE|CREATE TABLE IF NOT EXISTS TPPlayerIdle (player_id INTEGER, round_id INTEGER, idle_limit INTEGER, idle_warning INTEGER, UNIQUE(player_id, round_id), FOREIGN KEY(player_id) REFERENCES Player(id), FOREIGN KEY(round_id) REFERENCES TPRound(id))
CREATE_TABLE_TTPLAYERSTAT|CREATE TABLE IF NOT EXISTS TTPlayerStat (player_id INTEGER, tourneys INTEGER, points INTEGER, idles INTEGER, UNIQUE(player_id), FOREIGN KEY(player_id) REFERENCES Player(id))
CREATE_TABLE_TTTOURNEY|CREATE TABLE IF NOT EXISTS TTTourney (id INTEGER PRIMARY KEY, start_time INTEGER, end_time INTEGER, channel TEXT, rounds INTEGER)
CREATE_TABLE_TTPLAYERTOURNEY|CREATE TABLE IF NOT EXISTS TTPlayerTourney (player_id INTEGER, tourney_id INTEGER, result BOOLEAN, UNIQUE(player_id, tourney_id), FOREIGN KEY(player_id) REFERENCES Player(id), FOREIGN KEY(tourney_id) REFERENCES TTTourney(id))
CREATE_TABLE_TTPLAYERIDLE|CREATE TABLE IF NOT EXISTS TTPlayerIdle (player_id INTEGER, tourney_id INTEGER, idle_limit INTEGER, idle_warning INTEGER, UNIQUE(player_id, tourney_id), FOREIGN KEY(player_id) REFERENCES Player(id), FOREIGN KEY(tourney_id) REFERENCES TTTourney(id))
# Create view statements
CREATE_VIEW_BJPLAYER|CREATE VIEW IF NOT EXISTS BJPlayerView AS SELECT id, nick, cash, bank, bankrupts, rounds, winnings, winnings*1.0/rounds AS winrate, idles FROM Player pl INNER JOIN Purse pu ON pl.id = pu.player_id INNER JOIN BJPlayerStat bjps ON pl.id = bjps.player_id
CREATE_VIEW_TPPLAYER|CREATE VIEW IF NOT EXISTS TPPlayerView AS SELECT id, nick, cash, bank, bankrupts, rounds, winnings, winnings*1.0/rounds AS winrate, idles FROM Player pl INNER JOIN Purse pu ON pl.id = pu.player_id INNER JOIN TPPlayerStat tpps ON pl.id = tpps.player_id
CREATE_VIEW_TTPLAYER|CREATE VIEW IF NOT EXISTS TTPlayerView AS SELECT id, nick, tourneys, points, points*100.0/tourneys AS winrate, idles FROM Player pl INNER JOIN TTPlayerStat ttps ON pl.id = ttps.player_id
# Select statements
# Insert statements
INSERT_PLAYER|INSERT INTO Player (nick, time_created) VALUES(?, ?)
INSERT_PURSE|INSERT INTO Purse (player_id, cash, bank, bankrupts) VALUES(?, ?, ?, ?)
INSERT_BANKING|INSERT INTO Banking (player_id, transaction_time, cash_change, cash, bank) VALUES (?, ?, ?, ?, ?)
INSERT_BJPLAYERSTAT|INSERT INTO BJPlayerStat (player_id, rounds, winnings, idles) VALUES(?, ?, ?, ?)
INSERT_BJROUND|INSERT INTO BJRound (start_time, end_time, channel, shoe_size, num_cards_left) VALUES (?, ?, ?, ?, ?)
INSERT_BJPLAYERCHANGE|INSERT INTO BJPlayerChange (player_id, round_id, change, cash) VALUES (?, ?, ?, ?)
INSERT_BJPLAYERIDLE|INSERT INTO BJPlayerIdle (player_id, round_id, idle_limit, idle_warning) VALUES (?, ?, ?, ?)
INSERT_BJHAND|INSERT INTO BJHand (round_id, hand) VALUES (?, ?)
INSERT_BJPLAYERHAND|INSERT INTO BJPlayerHand (player_id, hand_id, bet, split, surrender, doubledown, result) VALUES (?, ?, ?, ?, ?, ?, ?)
INSERT_BJPLAYERINSURANCE|INSERT INTO BJPlayerInsurance (player_id, round_id, bet, result) VALUES (?, ?, ?, ?)
INSERT_BJHOUSE|INSERT INTO BJHouse (shoe_size, rounds, winnings) VALUES (?, ?, ?)
INSERT_TPPLAYERSTAT|INSERT INTO TPPlayerStat (player_id, rounds, winnings, idles) VALUES(?, ?, ?, ?)
INSERT_TPROUND|INSERT INTO TPRound (start_time, end_time, channel, community) VALUES (?, ?, ?, ?)
INSERT_TPPLAYERCHANGE|INSERT INTO TPPlayerChange (player_id, round_id, change, cash) VALUES (?, ?, ?, ?)
INSERT_TPHAND|INSERT INTO TPHand (round_id, hand) VALUES (?, ?)
INSERT_TPPLAYERHAND|INSERT INTO TPPlayerHand (player_id, hand_id, fold, allin) VALUES (?, ?, ?, ?)
INSERT_TPPLAYERIDLE|INSERT INTO TPPlayerIdle (player_id, round_id, idle_limit, idle_warning) VALUES (?, ?, ?, ?)
INSERT_TPPOT|INSERT INTO TPPot (round_id, amount) VALUES (?, ?)
INSERT_TPPLAYERPOT|INSERT INTO TPPlayerPot (player_id, pot_id, contribution, result) VALUES (?, ?, ?, ?)
INSERT_TTPLAYERSTAT|INSERT INTO TTPlayerStat (player_id, tourneys, points, idles) VALUES(?, ?, ?, ?)
INSERT_TTTOURNEY|INSERT INTO TTTourney (start_time, end_time, channel, rounds) VALUES (?, ?, ?, ?)
INSERT_TTPLAYERTOURNEY|INSERT INTO TTPlayerTourney (player_id, tourney_id, result) VALUES (?, ?, ?)
INSERT_TTPLAYERIDLE|INSERT INTO TTPlayerIdle (player_id, tourney_id, idle_limit, idle_warning) VALUES (?, ?, ?, ?)
# Update statements
UPDATE_PURSE|UPDATE Purse SET cash = ?, bank = ?, bankrupts = ? WHERE player_id = ?
UPDATE_BJPLAYERSTAT|UPDATE BJPlayerStat SET rounds = ?, winnings = ?, idles = ? WHERE player_id = ?
UPDATE_BJHOUSE|UPDATE BJHouse SET rounds = rounds + ?, winnings = winnings + ? WHERE shoe_size = ?
UPDATE_TPPLAYERSTAT|UPDATE TPPlayerStat SET rounds = ?, winnings = ?, idles = ? WHERE player_id = ?
